{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n}); // export const AuthContextProvider = (props) => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   useEffect(() => {\n//     const loggedInInfo = localStorage.getItem(\"isLoggedIn\");\n//     if (loggedInInfo === \"1\") {\n//       setIsLoggedIn(true);\n//     }\n//   }, []);\n//   const loginHandler = (email, password) => {\n//     // We should of course check email and password\n//     // But it's just a dummy/ demo anyways\n//     localStorage.setItem(\"isLoggedIn\", \"1\");\n//     setIsLoggedIn(true);\n//   };\n//   const logoutHandler = () => {\n//     localStorage.removeItem(\"isLoggedIn\");\n//     setIsLoggedIn(false);\n//   };\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         isLoggedIn: isLoggedIn,\n//         onLogout: logoutHandler,\n//         onLogin: loginHandler,\n//       }}\n//     >\n//       {props.children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nexport default AuthContext;","map":{"version":3,"sources":["/Users/osama/Desktop/react learning/01-starting-project 2/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHqB,CAApB,CAApB,C,CAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {},\n});\n\n// export const AuthContextProvider = (props) => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInInfo = localStorage.getItem(\"isLoggedIn\");\n\n//     if (loggedInInfo === \"1\") {\n//       setIsLoggedIn(true);\n//     }\n//   }, []);\n\n//   const loginHandler = (email, password) => {\n//     // We should of course check email and password\n//     // But it's just a dummy/ demo anyways\n//     localStorage.setItem(\"isLoggedIn\", \"1\");\n//     setIsLoggedIn(true);\n//   };\n\n//   const logoutHandler = () => {\n//     localStorage.removeItem(\"isLoggedIn\");\n//     setIsLoggedIn(false);\n//   };\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         isLoggedIn: isLoggedIn,\n//         onLogout: logoutHandler,\n//         onLogin: loginHandler,\n//       }}\n//     >\n//       {props.children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}